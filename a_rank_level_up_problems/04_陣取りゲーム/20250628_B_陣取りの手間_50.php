<?php
// ・ プレイヤーは現在の陣地から上下左右に 1 マス移動することで到達できるマスをプレイヤーの陣地にする。ただし、障害物( '#' )のマスは陣地にできない。
// 操作を終えた後のプレイヤーの陣地のマスを、陣地にするまでの操作回数にしたマップを出力してください。
// なお、はじめにプレイヤーのいるマスの操作回数は 0 とします。
// 
// H W     
// S_0     
// ...             
// S_(H-1)
// 
// 
// ・ 1行目では、盤面の行数 H , 列数 W が与えられます。
// ・ 続く H 行のうち i 行目 (0 ≦ i < H) には、盤面の i 行目の文字をまとめた文字列 S_i が与えられ
//     S_i の j 文字目は、盤面の i 行目の j 列目に書かれている文字を表します。(0 ≦ j < W)

    list($H, $W) = array_map('intval', explode(" ", trim(fgets(STDIN))));
    
    $map = [];
    $q = [];
    for($i=0;$i<$H;$i++)
    {
        $line = str_split(trim(fgets(STDIN)));
        for($j=0;$j<$W;$j++)
        {
            $map[$i][$j] = $line[$j];
            if($map[$i][$j] == "*")
            {
                $map[$i][$j] = "0";
                $q[] = [$i, $j, 0];
            }    
            //echo $map[$i][$j];
        }
        //echo "\n";
    }
    
    $dy = [-1,0,1,0];
    $dx = [0,1,0,-1];
    for($i=0;$i<count($q);$i++)
    {
        list($x, $y, $n) = $q[$i];
        for($k=0; $k<4; $k++)
        {
            $ny = $y + $dy[$k];
            $nx = $x + $dx[$k];
            if(isset($map[$ny][$nx])&&$map[$ny][$nx]==".")
            {
                $map[$ny][$nx] = (string)$n+1;
                $q[] = [$ny, $nx, $n+1];
            }
        }

    }
    
    // 出力
    for($i=0;$i<$H;$i++)
    {
        for($j=0;$j<$W;$j++)
        {
            echo $map[$i][$j];
        }
        echo "\n";
    }
?>