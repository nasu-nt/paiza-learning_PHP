<?php
// 盤面の情報とマスを '?' にする距離の個数 N, マスを '?' にするときの距離 l_i が与えられます。
// 現在プレイヤーのいるマスは '*' になっており、そのマスはプレイヤーの陣地です。
// ・ 現在の陣地から 1 マス移動することで到達できるマスをプレイヤーの陣地にして、'*' にする。
// ただし、障害物( '#' )のマスは陣地にできない。また、プレイヤーの開始時の位置からの距離が l_i であるとき、'*' の代わりに '?' にする。
// なお、はじめにプレイヤーのいるマスの開始時の位置からの距離は 0 とします。
// 
// H W N       
// S_0     
// ...     
// S_(H-1)     
// l_1     
// ...     
// l_N
// 
// ・ 1 行目では、盤面の行数 H , 列数 W , l の入力の回数 N が与えられます。
// ・ 続く H 行のうち i 行目 (0 ≦ i < H) には、盤面の i 行目の文字をまとめた文字列 S_i が与えられ、S_i の j 文字目は、盤面の i 行目の j 列目に書かれている文字を表します。(0 ≦ j < W)
// ・ 続く N 行では、マスを '?' にするときの開始時の位置からの距離 l_i が与えられます。(1 ≦ i ≦ N)

    // 盤面の行数 H , 列数 W , l の入力の回数 N 
    list($H, $W, $N) = array_map('intval', explode(" ", trim(fgets(STDIN))));
    
    $map = [];
    $sy = $sx = 0;
    for($i=0;$i<$H;$i++)
    {
        $line = str_split(trim(fgets(STDIN)));
        for($j=0;$j<$W;$j++)
        {
            $map[$i][$j] = $line[$j];
            list($sy, $sx) = [$i, $j];
            //echo $map[$i][$j];
        }
        //echo "\n";
    }
    
    $dy=[-1,0,1,0];
    $dx=[0,1,0,-1];
    for($i=0;$i<$H;$i++)
    {
        for($j=0;$j<$W;$j++)
        {
            if($map[$i][$j]=="*")
            {
                for($k=0;$k<4;$k++)
                {
                    $y = $i + $dy[$k];
                    $x = $j + $dx[$k];
                    
                    if(isset($map[$y][$x])&&$map[$y][$x]==".")
                    {
                        $map[$y][$x] = "*";
                    }
                }
            }
            //echo $map[$i][$j];
        }
        //echo "\n";
    }
    
    $l = [];
    for($i=0;$i<$N;$i++)
    {
        $l[$i] = (int)trim(fgets(STDIN));
    }
    
    for($k=0;$k<$N;$k++)
    {
        for($i=0;$i<$H;$i++)
        {
            for($j=0;$j<$W;$j++)
            {
                if( (abs($sy-$i)+abs($sx-$j)==$l[$k])
                &&(isset($map[$i][$j])&&$map[$i][$j]=="*") )
                {
                    $map[$i][$j] = "?";
                }
            }
        }
    }
    
    // 出力
    for($i=0;$i<$H;$i++)
    {
        for($j=0;$j<$W;$j++)
        {
            echo $map[$i][$j];
        }
        echo "\n";
    }    
    
?>